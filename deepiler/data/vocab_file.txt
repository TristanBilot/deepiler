atan@PLT
7
double
(
d,c
cos
log10
a,b
sqrt@PLT
d,e
;
atan2@PLT
.ident
b
pow@PLT
cos@PLT
g
.L8:
-64
a
10.2.1-6
a,d
isgreaterequal
%xmm0
.L4
testl
_ZSt14isgreaterequaldd
$72
addsd
.-main
f,b
exp@PLT
"GCC:
.weak
<pad>_
*
.LFE137:
"rd_1.cc"
3
floor@PLT
ret
g,e
leave
""
.-_ZSt14isgreaterequaldd
"rd_4.cc"
-24
8
.-_ZSt11islessequaldd
islessequal
islessgreater
c,b
log@PLT
asin
f,e
"rd_10.cc"
.cfi_def_cfa_offset
}
c,f
.LFB125:
.L5
if
"rd_2.cc"
20210110"
%rax
call
log
divsd
f,f
,
.type
_ZSt13islessgreaterdd:
-72
tan
log10@PLT
b,f
b,d
else{
setb
fmin@PLT
.file
floor
$1
main:
.L6
testb
sin@PLT
.cfi_offset
xorl
10.2.1
pushq
.-_ZSt13islessgreaterdd
.L6:
%xmm2
d
movapd
{
movq
%rbp
.L5:
ucomisd
.LFE133:
16
"rd_5.cc"
%al
-32
g,f
g,c
%rsp
+
popq
-88
%eax
jmp
b,c
comdat
_ZSt13islessgreaterdd
=
b,b
@progbits
-48
ceil@PLT
c,g
f,a
_ZSt11islessequaldd
d,f
atan
tan@PLT
main
/
$88
.cfi_startproc
fmax@PLT
.cfi_def_cfa
c
-40
fdim@PLT
int
)
b,a
.globl
%xmm1
#include
while
e,b
acos@PLT
.LFB133:
b,e
subq
subsd
_ZSt14isgreaterequaldd:
.LFB246:
.LFE246:
je
.text
movl
a,f
$64
exp
.L7:
.size
sqrt
.LFB137:
mulsd
.text._ZSt14isgreaterequaldd
@function
movzbl
<stdio.h>
fmax
f
6
$0
.cfi_endproc
d,b
e
sin
.L7
<math.h>
-8
-56
%rbx
fmin
c,a
.L8
.text._ZSt11islessequaldd
a,e
<EOS>_
"rd_0.cc"
.LFE125:
c,d
ceil
.L4:
"rd_6.cc"
-16
Debian
"axG"
.section
atan2
a,a
.cfi_def_cfa_register
setne
fdim
.text._ZSt13islessgreaterdd
acos
pow
-
sete
_ZSt11islessequaldd:
.note.GNU-stack
movsd
"rd_3.cc"
asin@PLT
d,a
e,a